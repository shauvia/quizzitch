{"ast":null,"code":"var _jsxFileName = \"/home/shauvia/quizzitch/src/MyQuizzes.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport DisplayEditQuiz from './editQuiz.js';\n\n// CreateQuiz({onSaveQuiz}){\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\n\n// function DisplayEditQuiz({quiz}){\n\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplaySingleQuiz({\n  quiz,\n  handleOnDeleteQuiz,\n  onEditQuiz\n}) {\n  _s();\n  const [displayQuestion, setdisplayQuestion] = useState(false);\n  const [editQuiz, setEditQuiz] = useState(false);\n  console.log('quiz', quiz);\n  // console.log('quiz id', quiz.id);\n  // console.log('list of questions in quiz', quiz.qa);\n  let questionsList = quiz.qa.map(questionItem => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      id: \"quizRecord\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayQuizQuestion\",\n        children: questionItem.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayQuizAnswer\",\n        children: questionItem.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 65\n      }, this)]\n    }, questionItem.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 60\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"deleteQuizBtn\",\n        onClick: () => handleOnDeleteQuiz(quiz.id),\n        children: \"Delete Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayQuizTitle\",\n        onClick: () => setdisplayQuestion(!displayQuestion),\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editQuizBtn\",\n        onClick: () => {\n          setEditQuiz(!editQuiz);\n        },\n        children: \"Edit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), displayQuestion ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questionsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 30\n      }, this) : null, editQuiz ? /*#__PURE__*/_jsxDEV(DisplayEditQuiz, {\n        oneQuiz: quiz,\n        onSaveQuiz: onEditQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DisplaySingleQuiz, \"o8ssDRwWF5rslL00QFQVHx0miic=\");\n_c = DisplaySingleQuiz;\nexport default function DisplayQuizzes({\n  quizzesList,\n  handleOnDeleteQuiz,\n  onEditQuiz\n}) {\n  const listOfQuizzes = quizzesList.map(quiz => {\n    return /*#__PURE__*/_jsxDEV(DisplaySingleQuiz, {\n      quiz: quiz,\n      handleOnDeleteQuiz: handleOnDeleteQuiz,\n      onEditQuiz: onEditQuiz\n    }, quiz.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 61\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listOfQuizzes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\n_c2 = DisplayQuizzes;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplaySingleQuiz\");\n$RefreshReg$(_c2, \"DisplayQuizzes\");","map":{"version":3,"names":["useState","DisplayEditQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplaySingleQuiz","quiz","handleOnDeleteQuiz","onEditQuiz","_s","displayQuestion","setdisplayQuestion","editQuiz","setEditQuiz","console","log","questionsList","qa","map","questionItem","id","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answer","className","onClick","title","oneQuiz","onSaveQuiz","_c","DisplayQuizzes","quizzesList","listOfQuizzes","_c2","$RefreshReg$"],"sources":["/home/shauvia/quizzitch/src/MyQuizzes.js"],"sourcesContent":["import { useState } from 'react';\r\nimport DisplayEditQuiz  from './editQuiz.js';\r\n\r\n// CreateQuiz({onSaveQuiz}){\r\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\r\n\r\n// function DisplayEditQuiz({quiz}){\r\n\r\n// }\r\n\r\nfunction DisplaySingleQuiz({quiz, handleOnDeleteQuiz, onEditQuiz}){\r\n  const [displayQuestion, setdisplayQuestion] = useState(false);\r\n  const [editQuiz, setEditQuiz] = useState(false);\r\n  \r\n  console.log('quiz',quiz);\r\n  // console.log('quiz id', quiz.id);\r\n  // console.log('list of questions in quiz', quiz.qa);\r\n  let questionsList = quiz.qa.map(questionItem => { return <li id='quizRecord' key={questionItem.id}>\r\n    <div id='displayQuizQuestion'>{questionItem.question}</div> <div id='displayQuizAnswer'>{questionItem.answer}</div></li>})\r\n  \r\n \r\n  return (\r\n    <>\r\n      <li className='quiz' > \r\n        <button className='deleteQuizBtn' onClick={()=> handleOnDeleteQuiz(quiz.id)}>Delete Quiz</button>\r\n        <div id=\"displayQuizTitle\" onClick={()=>setdisplayQuestion(!displayQuestion)}>{quiz.title}</div>\r\n        <button className='editQuizBtn' onClick={()=> {setEditQuiz(!editQuiz);}}>Edit Quiz</button>\r\n          {displayQuestion ? <ul>{questionsList}</ul> : null} \r\n          {editQuiz ? <DisplayEditQuiz oneQuiz={quiz} onSaveQuiz={onEditQuiz}/> : null}\r\n          {/* ogarnąć wyświetlanie quizu po dokonaniu zmian, aby wyświetlał się już ten po zmianach i znikł ten przed zmianami */}\r\n      </li>\r\n     \r\n    </>  \r\n  )\r\n}\r\n\r\nexport default function DisplayQuizzes({quizzesList, handleOnDeleteQuiz, onEditQuiz}){\r\n\r\n    const listOfQuizzes = quizzesList.map(quiz => { return  <DisplaySingleQuiz quiz={quiz} handleOnDeleteQuiz={handleOnDeleteQuiz} onEditQuiz={onEditQuiz} key={quiz.id}/>} )\r\n    return (\r\n      <div>\r\n        <ul>{listOfQuizzes}</ul>\r\n      </div>\r\n        \r\n      \r\n    )\r\n  }\r\n\r\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}