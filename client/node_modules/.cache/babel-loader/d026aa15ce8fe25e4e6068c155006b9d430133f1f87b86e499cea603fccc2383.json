{"ast":null,"code":"var _jsxFileName = \"/home/shauvia/quizzitch/src/QuizMode.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayQuizToFill({\n  quizz\n}) {\n  _s();\n  // console.log(\"quiz to fill\", quizz);\n  // console.log('quiz title', quizz.title);\n  const [index, setIndex] = useState(0);\n  // console.log(\"quiz.qa[index]\", quizz.qa[index]);\n  let disabled = false;\n  // console.log(\"index\", index);\n  let next;\n  let quizQuestion;\n  let quizAnswer;\n  if (index < quizz.qa.length - 1) {\n    next = () => setIndex(index + 1);\n  } else {\n    disabled = true;\n  }\n  quizQuestion = quizz.qa[index].question;\n  quizAnswer = quizz.qa[index].answer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quizToFill\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quizQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: quizAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      disabled: disabled,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// export default function InspirationGenerator({children}) {\n//   const [index, setIndex] = React.useState(0);\n//   const inspiration = inspirations[index];\n//   const next = () => setIndex((index + 1) % inspirations.length);\n\n//   return (\n//     <>\n//       <p>Your inspirational {inspiration.type} is:</p>\n//       {inspiration.type === 'quote'\n//       ? <FancyText text={inspiration.value} />\n//       : <Color value={inspiration.value} />}\n\n//       <button onClick={next}>Inspire me again</button>\n//       {children}\n//     </>\n//   );\n// }\n_s(DisplayQuizToFill, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c = DisplayQuizToFill;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuizToFill\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","DisplayQuizToFill","quizz","_s","index","setIndex","disabled","next","quizQuestion","quizAnswer","qa","length","question","answer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shauvia/quizzitch/src/QuizMode.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function DisplayQuizToFill({quizz}){\r\n  // console.log(\"quiz to fill\", quizz);\r\n  // console.log('quiz title', quizz.title);\r\n  const [index, setIndex] = useState(0);\r\n  // console.log(\"quiz.qa[index]\", quizz.qa[index]);\r\n  let disabled = false;\r\n  // console.log(\"index\", index);\r\n  let next;\r\n  let quizQuestion;\r\n  let quizAnswer;\r\n  \r\n  if (index < quizz.qa.length-1) {\r\n    next = () => setIndex((index + 1));\r\n  } else {\r\n    disabled = true\r\n  }\r\n  quizQuestion = quizz.qa[index].question;\r\n  quizAnswer = quizz.qa[index].answer;\r\n  \r\n\r\n  return(\r\n    <div id=\"quizToFill\">\r\n    <h3>{quizQuestion}</h3>\r\n    <h3>{quizAnswer}</h3>\r\n    <button onClick={next} disabled={disabled} >Next Question</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n// export default function InspirationGenerator({children}) {\r\n//   const [index, setIndex] = React.useState(0);\r\n//   const inspiration = inspirations[index];\r\n//   const next = () => setIndex((index + 1) % inspirations.length);\r\n\r\n//   return (\r\n//     <>\r\n//       <p>Your inspirational {inspiration.type} is:</p>\r\n//       {inspiration.type === 'quote'\r\n//       ? <FancyText text={inspiration.value} />\r\n//       : <Color value={inspiration.value} />}\r\n\r\n//       <button onClick={next}>Inspire me again</button>\r\n//       {children}\r\n//     </>\r\n//   );\r\n// }\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,iBAAiBA,CAAC;EAACC;AAAK,CAAC,EAAC;EAAAC,EAAA;EAChD;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA,IAAIQ,QAAQ,GAAG,KAAK;EACpB;EACA,IAAIC,IAAI;EACR,IAAIC,YAAY;EAChB,IAAIC,UAAU;EAEd,IAAIL,KAAK,GAAGF,KAAK,CAACQ,EAAE,CAACC,MAAM,GAAC,CAAC,EAAE;IAC7BJ,IAAI,GAAGA,CAAA,KAAMF,QAAQ,CAAED,KAAK,GAAG,CAAE,CAAC;EACpC,CAAC,MAAM;IACLE,QAAQ,GAAG,IAAI;EACjB;EACAE,YAAY,GAAGN,KAAK,CAACQ,EAAE,CAACN,KAAK,CAAC,CAACQ,QAAQ;EACvCH,UAAU,GAAGP,KAAK,CAACQ,EAAE,CAACN,KAAK,CAAC,CAACS,MAAM;EAGnC,oBACEb,OAAA;IAAKc,EAAE,EAAC,YAAY;IAAAC,QAAA,gBACpBf,OAAA;MAAAe,QAAA,EAAKP;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBnB,OAAA;MAAAe,QAAA,EAAKN;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnB,OAAA;MAAQoB,OAAO,EAAEb,IAAK;MAACD,QAAQ,EAAEA,QAAS;MAAAS,QAAA,EAAE;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAGV;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAAhB,EAAA,CAhDwBF,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}