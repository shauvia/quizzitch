{"ast":null,"code":"var _jsxFileName = \"/home/shauvia/quizzitch/src/MyQuizzes.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport DisplayEditQuiz from './editQuiz.js';\nimport DisplayQuizToFill from './QuizMode.js';\n// CreateQuiz({onSaveQuiz}){\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\n\n// function DisplayEditQuiz({quiz}){\n\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplaySingleQuiz({\n  quiz,\n  handleOnDeleteQuiz,\n  toggleQuiz,\n  onEditQuiz2\n}) {\n  // const [editQuiz, setEditQuiz] = useState(false);\n  let displayContent;\n  displayContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteQuizBtn\",\n      onClick: () => handleOnDeleteQuiz(quiz.id),\n      children: \"Delete Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"displayQuizTitle\",\n      onClick: () => {\n        toggleQuiz(quiz);\n      },\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editQuizBtn\",\n      onClick: () => {\n        onEditQuiz2(quiz);\n      },\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  // function onEditQuiz2(quiz)  {\n  //   onEditQuiz(quiz)\n  //   setEditQuiz(!editQuiz)\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"quiz\",\n      children: displayContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = DisplaySingleQuiz;\nexport default function DisplayQuizzes({\n  quizzesList,\n  handleOnDeleteQuiz,\n  onEditQuiz\n}) {\n  _s();\n  const [displayQuestion, setdisplayQuestion] = useState(false);\n  const [clikedQuiz, setClickedQuiz] = useState({});\n  const [editQuiz, setEditQuiz] = useState(false);\n  function toggleQuiz(quiz) {\n    setdisplayQuestion(!displayQuestion);\n    setClickedQuiz(quiz);\n  }\n  function onEditQuiz2(quiz) {\n    onEditQuiz(quiz);\n    setEditQuiz(!editQuiz);\n    setClickedQuiz(quiz);\n  }\n\n  // function hideQuestion(){\n  //   setdisplayQuestion(false)\n  // } \n\n  const listOfQuizzes = quizzesList.map(quiz => {\n    return /*#__PURE__*/_jsxDEV(DisplaySingleQuiz, {\n      quiz: quiz,\n      toggleQuiz: toggleQuiz,\n      handleOnDeleteQuiz: handleOnDeleteQuiz,\n      onEditQuiz2: onEditQuiz2\n    }, quiz.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 59\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [displayQuestion ? /*#__PURE__*/_jsxDEV(DisplayQuizToFill, {\n      quizz: clikedQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }, this) : null, editQuiz ? /*#__PURE__*/_jsxDEV(DisplayEditQuiz, {\n      oneQuiz: clikedQuiz,\n      onSaveQuiz: onEditQuiz2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this) : null, \";\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listOfQuizzes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\n_s(DisplayQuizzes, \"1xy68dpK4fp3x7sKZ+PfapHBj4g=\");\n_c2 = DisplayQuizzes;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplaySingleQuiz\");\n$RefreshReg$(_c2, \"DisplayQuizzes\");","map":{"version":3,"names":["useState","DisplayEditQuiz","DisplayQuizToFill","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplaySingleQuiz","quiz","handleOnDeleteQuiz","toggleQuiz","onEditQuiz2","displayContent","children","className","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","DisplayQuizzes","quizzesList","onEditQuiz","_s","displayQuestion","setdisplayQuestion","clikedQuiz","setClickedQuiz","editQuiz","setEditQuiz","listOfQuizzes","map","quizz","oneQuiz","onSaveQuiz","_c2","$RefreshReg$"],"sources":["/home/shauvia/quizzitch/src/MyQuizzes.js"],"sourcesContent":["import { useState } from 'react';\r\nimport DisplayEditQuiz  from './editQuiz.js';\r\nimport DisplayQuizToFill from './QuizMode.js';\r\n// CreateQuiz({onSaveQuiz}){\r\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\r\n\r\n// function DisplayEditQuiz({quiz}){\r\n\r\n// }\r\n\r\nfunction DisplaySingleQuiz({quiz, handleOnDeleteQuiz, toggleQuiz, onEditQuiz2}){\r\n  \r\n  // const [editQuiz, setEditQuiz] = useState(false);\r\n  let displayContent;\r\n  displayContent = (\r\n    <>\r\n      <button className='deleteQuizBtn' onClick={()=> handleOnDeleteQuiz(quiz.id)}>Delete Quiz</button>\r\n        <div id=\"displayQuizTitle\" onClick={()=>{toggleQuiz(quiz)}}>{quiz.title}</div>\r\n        <button className='editQuizBtn' onClick={()=> {onEditQuiz2(quiz) }}>Edit Quiz</button>\r\n    </>\r\n  )\r\n\r\n  // function onEditQuiz2(quiz)  {\r\n  //   onEditQuiz(quiz)\r\n  //   setEditQuiz(!editQuiz)\r\n    \r\n  // }\r\n \r\n  return (\r\n    <>\r\n      <li className='quiz' > \r\n        {/* <button className='deleteQuizBtn' onClick={()=> handleOnDeleteQuiz(quiz.id)}>Delete Quiz</button>\r\n        <div id=\"displayQuizTitle\" onClick={()=>setdisplayQuestion(!displayQuestion)}>{quiz.title}</div>\r\n        <button className='editQuizBtn' onClick={()=> {setEditQuiz(!editQuiz)}}>Edit Quiz</button> */}\r\n        {/* {editQuiz ? <DisplayEditQuiz oneQuiz={quiz} onSaveQuiz={onEditQuiz2} /> :  displayContent}  */}\r\n        {displayContent}\r\n      </li>\r\n     \r\n    </>  \r\n  )\r\n}\r\n\r\nexport default function DisplayQuizzes({quizzesList, handleOnDeleteQuiz, onEditQuiz}){\r\n  const [displayQuestion, setdisplayQuestion] = useState(false);\r\n  const [clikedQuiz, setClickedQuiz] = useState({});\r\n  const [editQuiz, setEditQuiz] = useState(false);\r\n\r\n  function toggleQuiz(quiz){\r\n    setdisplayQuestion(!displayQuestion);\r\n    setClickedQuiz(quiz)\r\n  }\r\n\r\n  function onEditQuiz2(quiz)  {\r\n    onEditQuiz(quiz);\r\n    setEditQuiz(!editQuiz);\r\n    setClickedQuiz(quiz);\r\n    \r\n  }\r\n\r\n  // function hideQuestion(){\r\n  //   setdisplayQuestion(false)\r\n  // } \r\n\r\n  const listOfQuizzes = quizzesList.map(quiz => { return  <DisplaySingleQuiz  quiz={quiz}  toggleQuiz={toggleQuiz} handleOnDeleteQuiz={handleOnDeleteQuiz} onEditQuiz2={onEditQuiz2} key={quiz.id}/>} )\r\n  return (\r\n      <div>\r\n        {displayQuestion ? <DisplayQuizToFill quizz={clikedQuiz}/>: null }\r\n        {editQuiz ? <DisplayEditQuiz oneQuiz={clikedQuiz} onSaveQuiz={onEditQuiz2} />: null};\r\n        <ul>{listOfQuizzes}</ul> \r\n      </div>\r\n        \r\n      \r\n    )\r\n  }\r\n\r\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}