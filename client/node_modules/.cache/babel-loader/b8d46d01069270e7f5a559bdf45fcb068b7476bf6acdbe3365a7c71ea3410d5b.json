{"ast":null,"code":"// import QuizSetup from './QuizSetupPage.js';\nimport'./App.css';import{useState}from'react';import CreateQuiz from'./QuizSetupPage.js';import DisplayQuizzes from'./MyQuizzes.js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function NavBar(_ref){let{onClickedHome,onClickedMyQuizzes}=_ref;return/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"menu\",children:[/*#__PURE__*/_jsx(\"li\",{onClick:onClickedHome,children:\"Home\"}),/*#__PURE__*/_jsx(\"li\",{onClick:onClickedMyQuizzes,children:\"My Quizzes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Settings\"})]})});}function Header(_ref2){let{goBackToHomePage,goToMyQuizzes}=_ref2;return/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quizzitch\"}),/*#__PURE__*/_jsx(NavBar,{onClickedHome:goBackToHomePage,onClickedMyQuizzes:goToMyQuizzes})]});}function Button(_ref3){let{btnName,btnId,onClickedButton}=_ref3;return/*#__PURE__*/_jsx(\"button\",{onClick:onClickedButton,id:btnId,children:btnName});}function SearchBar(_ref4){let{searchBarId}=_ref4;return/*#__PURE__*/_jsx(\"input\",{id:searchBarId,type:\"text\",placeholder:\"Search...\"});}function Footer(){return/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 shauvia\"})});}// function QuizSetupPage({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\n//   return ( \n//     <QuizSetup onAddQuizTitle={onAddQuizTitle} onAddQuizQA={onAddQuizQA} questionList={questionList} quizTitle={quizTitle}/>\n//   )  \n// }\nfunction HomePage(_ref5){let{onCreateNewQuiz}=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"homePage\",children:[/*#__PURE__*/_jsx(Button,{onClickedButton:onCreateNewQuiz,btnId:\"btnCreateNewQuiz\",btnName:\"Create New Quiz\"}),/*#__PURE__*/_jsx(Button,{btnId:\"btnRecentQuizes\",btnName:\"Recent Quizes\"}),/*#__PURE__*/_jsx(SearchBar,{searchBarId:\"SearchBar\"})]});}function App(){// const [contentToDisplay, setContentToDisplay] = useState(\"homepage\");\n// if (contentToDisplay === \"homepage\") {\n//   ///\n// }\n// else if (contentToDisplay === \"newQuiz\") {\n//   //\n// }\n// <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false);}} />\n//     { contentToDisplay === \"homepage\" ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false);}}/> : null }\n//     { contentToDisplay === \"newQuiz\" ? <QuizSetupPage /> : null}\nconst[uploadNewQuiz,setUploadNewQuiz]=useState(false);const[uploadHomePage,setUploadHomePage]=useState(true);const[displayMyQuizzes,setdisplayMyQuizzes]=useState(false);const[nextId,setNextId]=useState(0);const[keyId,setKeyId]=useState(0);const[quizzes,setQuizzes]=useState([]);// function handleAddQuizTitle(quizTitle) {\n//   const newQuiz = {...quiz};\n//   // console.log('skopiowany Quiz and title', newQuiz)\n//   newQuiz.title = quizTitle;\n//   // console.log(\"newQuiztitle\", newQuiz.title);\n//   setQuiz(newQuiz);\n// }\n// function handleAddQuizQA({quizQuestion, quizAnswer}){\n//   const newQuiz = {...quiz};\n//   console.log('skopiowany Quiz and question', newQuiz)\n//   newQuiz.qa = [...quiz.qa];\n//   console.log(\"newQuiz.qa po skopiowaniu\")\n//   newQuiz.qa.push(\n//     {question: quizQuestion,\n//     answer : quizAnswer,\n//     id: nextId}\n//   )\n//   setNextId(nextId + 1);\n//   console.log(\"newQuiz and question\", newQuiz);\n//   setQuiz(newQuiz);\n// }\nfunction handleOnDeleteQuiz(quizId){const newQuizzes=[...quizzes];let newerQuizzes=[];for(let quiz of newQuizzes){if(quizId!==quiz.id){newerQuizzes.push(quiz);}}// console.log(\"newQuiz\", newQuiz)\nsetQuizzes(newerQuizzes);}function handleAddQuiz(quiz){const newQuizzes=[...quizzes];// console.log('skopiowany newQuizzes', newQuizzes)\nquiz.id=nextId;// console.log(\"id quizu\", quiz.id)\nnewQuizzes.push(quiz);setNextId(nextId+1);// console.log('newQuizzes po dodaniu quizu', newQuizzes)\nsetQuizzes(newQuizzes);setUploadHomePage(true);setUploadNewQuiz(false);}function handleOnEditQuiz(editedQuiz){const newQuizzes=[...quizzes];// let newerQuizzes =[];\nconsole.log(\"newQuizzes\",editedQuiz);for(let i=0;i<newQuizzes.length;i++){if(newQuizzes[i].id===editedQuiz.id){newQuizzes[i]=editedQuiz;}}setQuizzes(newQuizzes);// for (let quiz of newQuizzes) {\n//   console.log('quiz przed edycja', quiz);\n//   if(editedQuiz.id === quiz.id) {\n//     newerQuizzes.push(editedQuiz)\n//     console.log('quiz po zedytowaniu', quiz );\n//   }\n//   newerQuizzes.push(quiz)\n// }\n// console.log('newQuizzes po edytowaniu quizu', newQuizzes)\n// setQuizzes(newerQuizzes);\n// sprawdzić, czy działa!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}let displayQuizzLis=/*#__PURE__*/_jsx(DisplayQuizzes,{quizzesList:quizzes,handleOnDeleteQuiz:handleOnDeleteQuiz,onEditQuiz:handleOnEditQuiz},keyId);// displayQuizzes\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{goBackToHomePage:()=>{setUploadHomePage(true);setUploadNewQuiz(false);setdisplayMyQuizzes(false);},goToMyQuizzes:()=>{setdisplayMyQuizzes(true);setUploadHomePage(false);setUploadNewQuiz(false);setKeyId(keyId+1);}}),uploadHomePage?/*#__PURE__*/_jsx(HomePage,{onCreateNewQuiz:()=>{setUploadNewQuiz(true);setUploadHomePage(false);setdisplayMyQuizzes(false);}}):null,uploadNewQuiz?/*#__PURE__*/_jsx(CreateQuiz,{onAddQuiz:handleAddQuiz}):null,displayMyQuizzes?displayQuizzLis:null,/*#__PURE__*/_jsx(Footer,{})]});}// let nextId = 0;\n// export default function List() {\n//   const [name, setName] = useState('');\n//   const [artists, setArtists] = useState([]);\n//   return (\n//     <>\n//       <h1>Inspiring sculptors:</h1>\n//       <input\n//         value={name}\n//         onChange={e => setName(e.target.value)}\n//       />\n//       <button onClick={() => {\n//         setArtists([\n//           ...artists,\n//           { id: nextId++, name: name }\n//         ]);\n//       }}>Add</button>\n//       <ul>\n//         {artists.map(artist => (\n//           <li key={artist.id}>{artist.name}</li>\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }\n// export default function AddTodo({ onAddTodo }) {\n//   const [title, setTitle] = useState('');\n//   return (\n//     <>\n//       <input\n//         placeholder=\"Add todo\"\n//         value={title}\n//         onChange={e => setTitle(e.target.value)}\n//       />\n//       <button onClick={() => {\n//         setTitle('');\n//         onAddTodo(title);\n//       }}>Add</button>\n//     </>\n//   )\n// }\nexport default App;","map":{"version":3,"names":["useState","CreateQuiz","DisplayQuizzes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavBar","_ref","onClickedHome","onClickedMyQuizzes","children","className","onClick","Header","_ref2","goBackToHomePage","goToMyQuizzes","Button","_ref3","btnName","btnId","onClickedButton","id","SearchBar","_ref4","searchBarId","type","placeholder","Footer","HomePage","_ref5","onCreateNewQuiz","App","uploadNewQuiz","setUploadNewQuiz","uploadHomePage","setUploadHomePage","displayMyQuizzes","setdisplayMyQuizzes","nextId","setNextId","keyId","setKeyId","quizzes","setQuizzes","handleOnDeleteQuiz","quizId","newQuizzes","newerQuizzes","quiz","push","handleAddQuiz","handleOnEditQuiz","editedQuiz","console","log","i","length","displayQuizzLis","quizzesList","onEditQuiz","onAddQuiz"],"sources":["/home/shauvia/quizzitch/quizApp/src/App.js"],"sourcesContent":["// import QuizSetup from './QuizSetupPage.js';\nimport './App.css';\nimport { useState } from 'react';\nimport CreateQuiz  from './QuizSetupPage.js';\nimport DisplayQuizzes from './MyQuizzes.js'\n\n\n\n\n\nfunction NavBar({onClickedHome,onClickedMyQuizzes}){\n  return (\n    <nav>\n      <ul className=\"menu\">\n        <li onClick={onClickedHome} >Home</li>\n        <li onClick={onClickedMyQuizzes}>My Quizzes</li>\n        <li>Settings</li>\n      </ul>\n    </nav>\n  )\n}\nfunction Header({goBackToHomePage, goToMyQuizzes}){\n  return (\n    <header>\n      <h1>Quizzitch</h1>\n      <NavBar onClickedHome={goBackToHomePage} onClickedMyQuizzes={goToMyQuizzes}/>\n    </header>\n  )\n}\n\nfunction Button({btnName, btnId, onClickedButton}){\n  return (\n    <button onClick={onClickedButton} id={btnId}>\n      {btnName}\n    </button>\n  )\n}\n\n\nfunction SearchBar ({searchBarId}){\n  return (\n      <input id={searchBarId} type=\"text\" placeholder=\"Search...\"/>\n  )\n}\n\nfunction Footer(){\n  return(\n    <footer>\n      <p>&copy; shauvia</p>\n    </footer>\n    \n  )\n}\n\n// function QuizSetupPage({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\n//   return ( \n//     <QuizSetup onAddQuizTitle={onAddQuizTitle} onAddQuizQA={onAddQuizQA} questionList={questionList} quizTitle={quizTitle}/>\n//   )  \n \n// }\n\n\nfunction HomePage({onCreateNewQuiz}){\n  return (\n    <div className='homePage'>\n        <Button onClickedButton={onCreateNewQuiz} btnId='btnCreateNewQuiz' btnName={\"Create New Quiz\"}></Button>\n        <Button btnId=\"btnRecentQuizes\" btnName={\"Recent Quizes\"}></Button>\n        <SearchBar searchBarId='SearchBar'/>\n      </div>\n  )\n}\n\n\n\n\n\n\n\n\nfunction App() {\n\n  // const [contentToDisplay, setContentToDisplay] = useState(\"homepage\");\n\n  // if (contentToDisplay === \"homepage\") {\n  //   ///\n  // }\n  // else if (contentToDisplay === \"newQuiz\") {\n  //   //\n  // }\n\n  // <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false);}} />\n  //     { contentToDisplay === \"homepage\" ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false);}}/> : null }\n  //     { contentToDisplay === \"newQuiz\" ? <QuizSetupPage /> : null}\n\n  const [uploadNewQuiz, setUploadNewQuiz] = useState(false);\n  const [uploadHomePage, setUploadHomePage] = useState(true);\n  const [displayMyQuizzes, setdisplayMyQuizzes] = useState(false);\n  const [nextId, setNextId] = useState(0);\n  const [keyId, setKeyId] = useState(0);\n  const [quizzes, setQuizzes] = useState([])\n\n  // function handleAddQuizTitle(quizTitle) {\n  //   const newQuiz = {...quiz};\n  //   // console.log('skopiowany Quiz and title', newQuiz)\n  //   newQuiz.title = quizTitle;\n  //   // console.log(\"newQuiztitle\", newQuiz.title);\n  //   setQuiz(newQuiz);\n  // }\n  // function handleAddQuizQA({quizQuestion, quizAnswer}){\n  //   const newQuiz = {...quiz};\n  //   console.log('skopiowany Quiz and question', newQuiz)\n  //   newQuiz.qa = [...quiz.qa];\n  //   console.log(\"newQuiz.qa po skopiowaniu\")\n  //   newQuiz.qa.push(\n  //     {question: quizQuestion,\n  //     answer : quizAnswer,\n  //     id: nextId}\n  //   )\n  //   setNextId(nextId + 1);\n  //   console.log(\"newQuiz and question\", newQuiz);\n  //   setQuiz(newQuiz);\n\n  // }\n\n  function handleOnDeleteQuiz(quizId){\n    const newQuizzes = [...quizzes];\n    let newerQuizzes =[];\n    for (let quiz of newQuizzes) {\n      if(quizId !== quiz.id) {\n        newerQuizzes.push(quiz);\n      }\n    }\n    // console.log(\"newQuiz\", newQuiz)\n    setQuizzes(newerQuizzes);\n  }\n\n  function handleAddQuiz(quiz) {\n    const newQuizzes = [...quizzes];\n    // console.log('skopiowany newQuizzes', newQuizzes)\n    quiz.id = nextId;\n    // console.log(\"id quizu\", quiz.id)\n    newQuizzes.push(quiz);\n    setNextId(nextId + 1);\n    // console.log('newQuizzes po dodaniu quizu', newQuizzes)\n    setQuizzes(newQuizzes);\n    setUploadHomePage(true); \n    setUploadNewQuiz(false)\n\n\n  }\n\n  function handleOnEditQuiz(editedQuiz) {\n    const newQuizzes = [...quizzes];\n    // let newerQuizzes =[];\n    console.log(\"newQuizzes\", editedQuiz)\n    for (let i = 0; i < newQuizzes.length; i++){\n      if(newQuizzes[i].id === editedQuiz.id){\n        newQuizzes[i] = editedQuiz;\n      }\n    }\n    setQuizzes(newQuizzes);\n\n    // for (let quiz of newQuizzes) {\n    //   console.log('quiz przed edycja', quiz);\n    //   if(editedQuiz.id === quiz.id) {\n    //     newerQuizzes.push(editedQuiz)\n    //     console.log('quiz po zedytowaniu', quiz );\n    //   }\n    //   newerQuizzes.push(quiz)\n    // }\n    // console.log('newQuizzes po edytowaniu quizu', newQuizzes)\n    // setQuizzes(newerQuizzes);\n\n    // sprawdzić, czy działa!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  }\n\n  let displayQuizzLis = <DisplayQuizzes quizzesList={quizzes} handleOnDeleteQuiz={handleOnDeleteQuiz} onEditQuiz={handleOnEditQuiz} key={keyId}/>;\n  // displayQuizzes\n\n  return (\n    <>\n      <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false); setdisplayMyQuizzes(false)}} goToMyQuizzes={()=>{setdisplayMyQuizzes(true); setUploadHomePage(false); setUploadNewQuiz(false); setKeyId(keyId + 1)}} />\n      { uploadHomePage ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false); setdisplayMyQuizzes(false)}}/> : null }\n        {uploadNewQuiz ? < CreateQuiz onAddQuiz={handleAddQuiz}/> : null}\n        {displayMyQuizzes ? displayQuizzLis : null}\n      {/* { uploadNewQuiz ? <QuizSetupPage onAddQuizTitle={handleAddQuizTitle} onAddQuizQA={handleAddQuizQA} questionList={quiz.qa} quizTitle={quiz.title}/> : null} */}\n      \n      <Footer/>\n  </>\n  )\n}\n\n// let nextId = 0;\n\n// export default function List() {\n//   const [name, setName] = useState('');\n//   const [artists, setArtists] = useState([]);\n\n//   return (\n//     <>\n//       <h1>Inspiring sculptors:</h1>\n//       <input\n//         value={name}\n//         onChange={e => setName(e.target.value)}\n//       />\n//       <button onClick={() => {\n//         setArtists([\n//           ...artists,\n//           { id: nextId++, name: name }\n//         ]);\n//       }}>Add</button>\n//       <ul>\n//         {artists.map(artist => (\n//           <li key={artist.id}>{artist.name}</li>\n//         ))}\n//       </ul>\n//     </>\n//   );\n// }\n\n\n// export default function AddTodo({ onAddTodo }) {\n//   const [title, setTitle] = useState('');\n//   return (\n//     <>\n//       <input\n//         placeholder=\"Add todo\"\n//         value={title}\n//         onChange={e => setTitle(e.target.value)}\n//       />\n//       <button onClick={() => {\n//         setTitle('');\n//         onAddTodo(title);\n//       }}>Add</button>\n//     </>\n//   )\n// }\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}