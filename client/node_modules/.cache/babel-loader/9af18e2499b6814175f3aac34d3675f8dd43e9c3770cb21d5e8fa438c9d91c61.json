{"ast":null,"code":"import{useState}from'react';// function QuizTitle({onAddQuizTitle}){\n//   const [quizTitle, setQuizTitle] = useState('');\n//   return (\n//     <>\n//       <input id=\"AddQuizTitle\" type='text' placeholder='Add quiz title' value={quizTitle}  onChange={e => setQuizTitle(e.target.value)} />\n//       <button id=\"btnAddQuizTitle\" onClick={() => {onAddQuizTitle(quizTitle); setQuizTitle('');}} >Add</button>\n//       {/* add ways to cominucate for element  with parent; Parent gives props and compoment uses what is is props to communicate back with parent */}\n//     </>\n//   )\n// }\n// function QuizBody({onAddQuizQA}){\n//   const [quizQuestion, setQuizQuestion] = useState(\"\");\n//   const [quizAnswer, setQuizAnswer] = useState('');\n//   return (\n//     <>\n//       <input id=\"EnterQuestion\"type='text' placeholder='Enter a question' value={quizQuestion} onChange={e => setQuizQuestion(e.target.value)}/>\n//       <input id=\"EnterAnswer\" type='text' placeholder='Enter an answer' value={quizAnswer} onChange={e => setQuizAnswer(e.target.value)}/>\n//       <button id=\"btnQAEnter\" onClick={() => {onAddQuizQA({quizQuestion, quizAnswer}); setQuizQuestion(''); setQuizAnswer('')}}>Add</button>\n//     </>\n//   )\n// }\n// function QaItem({question, answer}){\n//   return(\n//     <>\n//       <p>q: {question}</p>\n//       <p>a: {answer}</p>\n//     </>\n//   )\n// }\n// function QaList({questionList, quizTitle}){\n//   const listItems = questionList.map(qa => {console.log('question', qa); return <li key={qa.id}>  <QaItem question={qa.question} answer={qa.answer}/> </li>;});\n// //   <ul>\n// //   {questionList.map(qa => (\n// //     <li key={qa.id}>{qa.question}</li>\n// //   ))}\n// // </ul>\n// // </>\n//   return (\n//     <div className=\"quizQa\">\n//       <h5>{quizTitle}</h5>\n//       <ul className='qaList'>{listItems}</ul>\n//     </div>\n//   )\n// }\n// export default function QuizSetup({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\n//   return (\n//     <>\n//       <div className='quizSetupPage'>\n//         <QuizTitle onAddQuizTitle={onAddQuizTitle}/>\n//         <QuizBody onAddQuizQA={onAddQuizQA}/>\n//       </div>\n//       <QaList questionList={questionList} quizTitle={quizTitle}/>\n//     </>\n//   );\n// }\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizName(props){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"input\",{...props,id:\"\",type:\"text\",placeholder:\"Add quiz title\",value:props.quizTitle,onChange:e=>props.setQuizTitle(e.target.value)})});}function QuizContent(_ref){let{quizQuestion,quizAnswer,editQuizQuestion,editQuizAnswer,onDeleteQuestion}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{className:\"quizQuestion\",type:\"text\",placeholder:\"Enter a question\",value:quizQuestion,onChange:e=>editQuizQuestion(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{className:\"quizAnswer\",type:\"text\",placeholder:\"Enter an answer\",value:quizAnswer,onChange:e=>editQuizAnswer(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{id:\"deleteQuestion\",onClick:onDeleteQuestion,children:\"Delete Question\"})]});}function DislayQuizContent(_ref2){let{questionList,handleEditQuizQestion,handleEditQuizAnswer,handleOnDeleteQuestion}=_ref2;const listItems=questionList.map((item,index)=>{return/*#__PURE__*/_jsx(QuizContent,{quizQuestion:item.question,quizAnswer:item.answer,editQuizQuestion:quizQuestion=>handleEditQuizQestion(quizQuestion,index),editQuizAnswer:quizAnswer=>handleEditQuizAnswer(quizAnswer,index),onDeleteQuestion:()=>handleOnDeleteQuestion(item.id)},item.id);});return/*#__PURE__*/_jsx(\"div\",{id:\"quizQa\",children:listItems});}function NextQuestionBtn(_ref3){let{onCreateNewQuestion}=_ref3;return/*#__PURE__*/_jsx(\"button\",{id:\"nextQuestion\",onClick:onCreateNewQuestion,children:\"New Question\"});}function SaveQuizBtn(_ref4){let{oncreateQuiz}=_ref4;return/*#__PURE__*/_jsx(\"button\",{id:\"saveQuiz\",onClick:oncreateQuiz,children:\"Save Quiz\"});}export default function CreateQuiz(_ref5){let{onAddQuiz}=_ref5;const[quiz,setQuiz]=useState({title:\"\",qa:[{question:'',answer:'',id:0}],lastQuestionId:0});function handleAddQuizTitle(quizName){const newQuiz={...quiz};// console.log('skopiowany Quiz and title', newQuiz)\nnewQuiz.title=quizName;// console.log(\"newQuiztitle\", newQuiz.title);\n// console.log('newQuiz and title', newQuiz)\nsetQuiz(newQuiz);}function handleEditQuizQestion(quizQuestion,questionIndex){const newQuiz={...quiz};// console.log('skopiowany Quiz and question', newQuiz)\nnewQuiz.qa=[...quiz.qa];// console.log(\"newQuiz.qa po skopiowaniu\")\nnewQuiz.qa[questionIndex].question=quizQuestion;// console.log(\"newQuiz and question\", newQuiz);\nsetQuiz(newQuiz);}function handleEditQuizAnswer(quizAnswer,questionIndex){const newQuiz={...quiz};// console.log('skopiowany Quiz and question', newQuiz)\nnewQuiz.qa=[...quiz.qa];// console.log(\"newQuiz.qa po skopiowaniu\")\nnewQuiz.qa[questionIndex].answer=quizAnswer;// console.log(\"newQuiz and question\", newQuiz);\nsetQuiz(newQuiz);}function handleOnDeleteQuestion(questionId){// console.log(\"questionId\", questionId);\nconst newQuiz={...quiz};newQuiz.qa=[...quiz.qa];let newQa=[];for(let question of newQuiz.qa){if(questionId!==question.id){newQa.push(question);}}newQuiz.qa=newQa;// console.log(\"newQuiz\", newQuiz)\nsetQuiz(newQuiz);}function handleCreateNewQuestion(){const newQuiz={...quiz};newQuiz.qa=[...quiz.qa];let nextId=newQuiz.lastQuestionId+1;newQuiz.lastQuestionId=nextId;newQuiz.qa.push({question:'',answer:'',id:nextId});setQuiz(newQuiz);}return/*#__PURE__*/_jsxs(\"div\",{id:\"createQuizComponent\",children:[/*#__PURE__*/_jsx(QuizName,{quizTitle:quiz.title,setQuizTitle:handleAddQuizTitle,className:\"quizTitle\"}),/*#__PURE__*/_jsx(DislayQuizContent,{questionList:quiz.qa,handleEditQuizQestion:handleEditQuizQestion,handleEditQuizAnswer:handleEditQuizAnswer,handleOnDeleteQuestion:handleOnDeleteQuestion}),/*#__PURE__*/_jsx(NextQuestionBtn,{onCreateNewQuestion:handleCreateNewQuestion}),/*#__PURE__*/_jsx(SaveQuizBtn,{oncreateQuiz:()=>onAddQuiz(quiz)})]});}","map":{"version":3,"names":["useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","QuizName","props","children","id","type","placeholder","value","quizTitle","onChange","e","setQuizTitle","target","QuizContent","_ref","quizQuestion","quizAnswer","editQuizQuestion","editQuizAnswer","onDeleteQuestion","className","onClick","DislayQuizContent","_ref2","questionList","handleEditQuizQestion","handleEditQuizAnswer","handleOnDeleteQuestion","listItems","map","item","index","question","answer","NextQuestionBtn","_ref3","onCreateNewQuestion","SaveQuizBtn","_ref4","oncreateQuiz","CreateQuiz","_ref5","onAddQuiz","quiz","setQuiz","title","qa","lastQuestionId","handleAddQuizTitle","quizName","newQuiz","questionIndex","questionId","newQa","push","handleCreateNewQuestion","nextId"],"sources":["/home/shauvia/quizzitch/quizApp/src/QuizSetupPage.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n// function QuizTitle({onAddQuizTitle}){\r\n//   const [quizTitle, setQuizTitle] = useState('');\r\n//   return (\r\n//     <>\r\n//       <input id=\"AddQuizTitle\" type='text' placeholder='Add quiz title' value={quizTitle}  onChange={e => setQuizTitle(e.target.value)} />\r\n//       <button id=\"btnAddQuizTitle\" onClick={() => {onAddQuizTitle(quizTitle); setQuizTitle('');}} >Add</button>\r\n//       {/* add ways to cominucate for element  with parent; Parent gives props and compoment uses what is is props to communicate back with parent */}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function QuizBody({onAddQuizQA}){\r\n//   const [quizQuestion, setQuizQuestion] = useState(\"\");\r\n//   const [quizAnswer, setQuizAnswer] = useState('');\r\n//   return (\r\n//     <>\r\n//       <input id=\"EnterQuestion\"type='text' placeholder='Enter a question' value={quizQuestion} onChange={e => setQuizQuestion(e.target.value)}/>\r\n//       <input id=\"EnterAnswer\" type='text' placeholder='Enter an answer' value={quizAnswer} onChange={e => setQuizAnswer(e.target.value)}/>\r\n//       <button id=\"btnQAEnter\" onClick={() => {onAddQuizQA({quizQuestion, quizAnswer}); setQuizQuestion(''); setQuizAnswer('')}}>Add</button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function QaItem({question, answer}){\r\n//   return(\r\n//     <>\r\n//       <p>q: {question}</p>\r\n//       <p>a: {answer}</p>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// function QaList({questionList, quizTitle}){\r\n//   const listItems = questionList.map(qa => {console.log('question', qa); return <li key={qa.id}>  <QaItem question={qa.question} answer={qa.answer}/> </li>;});\r\n// //   <ul>\r\n// //   {questionList.map(qa => (\r\n// //     <li key={qa.id}>{qa.question}</li>\r\n// //   ))}\r\n// // </ul>\r\n// // </>\r\n//   return (\r\n//     <div className=\"quizQa\">\r\n//       <h5>{quizTitle}</h5>\r\n//       <ul className='qaList'>{listItems}</ul>\r\n//     </div>\r\n      \r\n    \r\n//   )\r\n// }\r\n\r\n\r\n\r\n// export default function QuizSetup({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\r\n//   return (\r\n//     <>\r\n//       <div className='quizSetupPage'>\r\n//         <QuizTitle onAddQuizTitle={onAddQuizTitle}/>\r\n//         <QuizBody onAddQuizQA={onAddQuizQA}/>\r\n//       </div>\r\n//       <QaList questionList={questionList} quizTitle={quizTitle}/>\r\n//     </>\r\n//   );\r\n\r\n// }\r\n\r\n\r\nfunction QuizName(props){\r\n  return (\r\n    <>\r\n      <input {...props} id=\"\" type='text' placeholder='Add quiz title' value={props.quizTitle}  onChange={e => props.setQuizTitle(e.target.value)} />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction QuizContent({quizQuestion, quizAnswer, editQuizQuestion, editQuizAnswer, onDeleteQuestion}){\r\n  return (\r\n    <>\r\n      <input className=\"quizQuestion\" type='text' placeholder='Enter a question' value={quizQuestion} onChange={e => editQuizQuestion(e.target.value)}/>\r\n      <input className=\"quizAnswer\" type='text' placeholder='Enter an answer' value={quizAnswer} onChange={e => editQuizAnswer(e.target.value)}/>\r\n      <button id='deleteQuestion' onClick={onDeleteQuestion}>Delete Question</button>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction DislayQuizContent({questionList, handleEditQuizQestion, handleEditQuizAnswer, handleOnDeleteQuestion}){\r\n  const listItems = questionList.map((item, index) =>{ return <QuizContent key={item.id} quizQuestion={item.question} quizAnswer={item.answer} editQuizQuestion={quizQuestion => handleEditQuizQestion(quizQuestion, index)} editQuizAnswer={quizAnswer => handleEditQuizAnswer(quizAnswer, index)} onDeleteQuestion={() => handleOnDeleteQuestion(item.id)}/>})\r\n  return (\r\n    <div id='quizQa'>\r\n      {listItems}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction NextQuestionBtn ({onCreateNewQuestion}){\r\n  return (\r\n    <button id='nextQuestion' onClick={onCreateNewQuestion}>New Question</button>\r\n  )\r\n}\r\n\r\nfunction SaveQuizBtn ({oncreateQuiz}){\r\n  return (\r\n    <button id=\"saveQuiz\" onClick={oncreateQuiz}>Save Quiz</button> \r\n  )\r\n}\r\n\r\nexport default function CreateQuiz({onAddQuiz}){\r\n  const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\r\n\r\n\r\n  function handleAddQuizTitle(quizName) {\r\n    const newQuiz = {...quiz};\r\n    // console.log('skopiowany Quiz and title', newQuiz)\r\n    newQuiz.title = quizName;\r\n    // console.log(\"newQuiztitle\", newQuiz.title);\r\n    // console.log('newQuiz and title', newQuiz)\r\n    setQuiz(newQuiz);\r\n  }\r\n\r\n\r\n  function handleEditQuizQestion(quizQuestion, questionIndex){\r\n    const newQuiz = {...quiz};\r\n    // console.log('skopiowany Quiz and question', newQuiz)\r\n    newQuiz.qa = [...quiz.qa];\r\n    // console.log(\"newQuiz.qa po skopiowaniu\")\r\n    newQuiz.qa[questionIndex].question = quizQuestion;\r\n    // console.log(\"newQuiz and question\", newQuiz);\r\n    setQuiz(newQuiz);\r\n  }\r\n\r\n  function handleEditQuizAnswer(quizAnswer, questionIndex){\r\n    const newQuiz = {...quiz};\r\n    // console.log('skopiowany Quiz and question', newQuiz)\r\n    newQuiz.qa = [...quiz.qa];\r\n    // console.log(\"newQuiz.qa po skopiowaniu\")\r\n    newQuiz.qa[questionIndex].answer = quizAnswer;\r\n    // console.log(\"newQuiz and question\", newQuiz);\r\n    setQuiz(newQuiz);\r\n  }\r\n\r\n  function handleOnDeleteQuestion(questionId){\r\n    // console.log(\"questionId\", questionId);\r\n    const newQuiz = {...quiz};\r\n    newQuiz.qa = [...quiz.qa];\r\n    let newQa =[];\r\n    for (let question of newQuiz.qa) {\r\n      if(questionId !== question.id) {\r\n        newQa.push(question);\r\n      }\r\n    }\r\n    newQuiz.qa = newQa;\r\n    // console.log(\"newQuiz\", newQuiz)\r\n    setQuiz(newQuiz);\r\n  }\r\n\r\n  function handleCreateNewQuestion(){\r\n    const newQuiz = {...quiz};\r\n    newQuiz.qa = [...quiz.qa];\r\n    let nextId = newQuiz.lastQuestionId + 1;\r\n    newQuiz.lastQuestionId = nextId;\r\n    newQuiz.qa.push(\r\n      {question: '',\r\n      answer :'',\r\n      id: nextId}\r\n    )\r\n    setQuiz(newQuiz);\r\n  }\r\n\r\n  return (\r\n    <div id='createQuizComponent'>\r\n      <QuizName quizTitle={quiz.title} setQuizTitle={handleAddQuizTitle} className=\"quizTitle\"/>\r\n      <DislayQuizContent questionList={quiz.qa} handleEditQuizQestion={handleEditQuizQestion} handleEditQuizAnswer={handleEditQuizAnswer} handleOnDeleteQuestion={handleOnDeleteQuestion}/>\r\n      <NextQuestionBtn onCreateNewQuestion={handleCreateNewQuestion}/>\r\n      <SaveQuizBtn oncreateQuiz={() => onAddQuiz(quiz)} />\r\n      \r\n    </div>  \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}