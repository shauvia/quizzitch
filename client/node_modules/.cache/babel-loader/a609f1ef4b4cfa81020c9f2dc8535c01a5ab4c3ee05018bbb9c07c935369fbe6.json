{"ast":null,"code":"var _jsxFileName = \"/home/shauvia/quizzitch/src/MyQuizzes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport DisplayEditQuiz from './editQuiz.js';\nimport DisplayQuizToFill from './QuizMode.js';\n// CreateQuiz({onSaveQuiz}){\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\n\n// function DisplayEditQuiz({quiz}){\n\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplaySingleQuiz({\n  quiz,\n  handleOnDeleteQuiz,\n  onEditQuiz,\n  displayQuestionAndAnswerInput,\n  displayQuestion,\n  toggle\n}) {\n  _s();\n  const [editQuiz, setEditQuiz] = useState(false);\n  let displayContent;\n  displayContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteQuizBtn\",\n      onClick: () => handleOnDeleteQuiz(quiz.id),\n      children: \"Delete Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"displayQuizTitle\",\n      onClick: toggle,\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editQuizBtn\",\n      onClick: () => {\n        setEditQuiz(!editQuiz);\n        setdisplayQuestion(false);\n      },\n      children: \"Edit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  function onEditQuiz2(quiz) {\n    onEditQuiz(quiz);\n    setEditQuiz(!editQuiz);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"quiz\",\n      children: [editQuiz ? /*#__PURE__*/_jsxDEV(DisplayEditQuiz, {\n        oneQuiz: quiz,\n        onSaveQuiz: onEditQuiz2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : displayContent, displayQuestion ? /*#__PURE__*/_jsxDEV(DisplayQuizToFill, {\n        quizz: quiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DisplaySingleQuiz, \"0hAYMEVPKluiGceZNuDMmtvEYPE=\");\n_c = DisplaySingleQuiz;\nexport default function DisplayQuizzes({\n  quizzesList,\n  handleOnDeleteQuiz,\n  onEditQuiz\n}) {\n  _s2();\n  const [displayQuestion, setdisplayQuestion] = useState(false);\n  function toggle(displayQuestion) {\n    setdisplayQuestion(!displayQuestion);\n  }\n  const listOfQuizzes = quizzesList.map(quiz => {\n    return /*#__PURE__*/_jsxDEV(DisplaySingleQuiz, {\n      quiz: quiz,\n      displayQuestion: displayQuestion,\n      toggle: toggle,\n      handleOnDeleteQuiz: handleOnDeleteQuiz,\n      onEditQuiz: onEditQuiz\n    }, quiz.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 61\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listOfQuizzes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\n_s2(DisplayQuizzes, \"tjKoEiKLuGE9ilL0OZL8YJGFwOQ=\");\n_c2 = DisplayQuizzes;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplaySingleQuiz\");\n$RefreshReg$(_c2, \"DisplayQuizzes\");","map":{"version":3,"names":["useState","DisplayEditQuiz","DisplayQuizToFill","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplaySingleQuiz","quiz","handleOnDeleteQuiz","onEditQuiz","displayQuestionAndAnswerInput","displayQuestion","toggle","_s","editQuiz","setEditQuiz","displayContent","children","className","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","title","setdisplayQuestion","onEditQuiz2","oneQuiz","onSaveQuiz","quizz","_c","DisplayQuizzes","quizzesList","_s2","listOfQuizzes","map","_c2","$RefreshReg$"],"sources":["/home/shauvia/quizzitch/src/MyQuizzes.js"],"sourcesContent":["import { useState } from 'react';\r\nimport DisplayEditQuiz  from './editQuiz.js';\r\nimport DisplayQuizToFill from './QuizMode.js';\r\n// CreateQuiz({onSaveQuiz}){\r\n//   const [quiz, setQuiz] = useState({title:\"\", qa:[{question:'', answer:'', id: 0}], lastQuestionId: 0});\r\n\r\n// function DisplayEditQuiz({quiz}){\r\n\r\n// }\r\n\r\nfunction DisplaySingleQuiz({quiz, handleOnDeleteQuiz, onEditQuiz, displayQuestionAndAnswerInput, displayQuestion, toggle}){\r\n  \r\n  const [editQuiz, setEditQuiz] = useState(false);\r\n  let displayContent;\r\n  displayContent = (\r\n    <>\r\n      <button className='deleteQuizBtn' onClick={()=> handleOnDeleteQuiz(quiz.id)}>Delete Quiz</button>\r\n        <div id=\"displayQuizTitle\" onClick={toggle}>{quiz.title}</div>\r\n        <button className='editQuizBtn' onClick={()=> {setEditQuiz(!editQuiz); setdisplayQuestion(false)}}>Edit Quiz</button>\r\n    </>\r\n  )\r\n\r\n  function onEditQuiz2(quiz)  {\r\n    onEditQuiz(quiz)\r\n    setEditQuiz(!editQuiz)\r\n    \r\n  }\r\n \r\n  return (\r\n    <>\r\n      <li className='quiz' > \r\n        {/* <button className='deleteQuizBtn' onClick={()=> handleOnDeleteQuiz(quiz.id)}>Delete Quiz</button>\r\n        <div id=\"displayQuizTitle\" onClick={()=>setdisplayQuestion(!displayQuestion)}>{quiz.title}</div>\r\n        <button className='editQuizBtn' onClick={()=> {setEditQuiz(!editQuiz)}}>Edit Quiz</button> */}\r\n        {editQuiz ? <DisplayEditQuiz oneQuiz={quiz} onSaveQuiz={onEditQuiz2} /> :  displayContent} \r\n        {displayQuestion ? <DisplayQuizToFill quizz={quiz}/> : null} \r\n          \r\n          {/* ogarnąć wyświetlanie quizu po dokonaniu zmian, aby wyświetlał się już ten po zmianach i znikł ten przed zmianami */}\r\n      </li>\r\n     \r\n    </>  \r\n  )\r\n}\r\n\r\nexport default function DisplayQuizzes({quizzesList, handleOnDeleteQuiz, onEditQuiz}){\r\n  const [displayQuestion, setdisplayQuestion] = useState(false);\r\n\r\n  function toggle(displayQuestion){\r\n    setdisplayQuestion(!displayQuestion);\r\n    \r\n  }\r\n\r\n    const listOfQuizzes = quizzesList.map(quiz => { return  <DisplaySingleQuiz quiz={quiz} displayQuestion={displayQuestion} toggle={toggle} handleOnDeleteQuiz={handleOnDeleteQuiz} onEditQuiz={onEditQuiz} key={quiz.id}/>} )\r\n  return (\r\n      <div>\r\n        <ul>{listOfQuizzes}</ul>\r\n      </div>\r\n        \r\n      \r\n    )\r\n  }\r\n\r\n// if kliknięte edit quiz wyswietl DisplayEditQuiz, else wyświetle <DisplaySingleQuiz\r\n  "],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,eAAe,MAAO,eAAe;AAC5C,OAAOC,iBAAiB,MAAM,eAAe;AAC7C;AACA;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,iBAAiBA,CAAC;EAACC,IAAI;EAAEC,kBAAkB;EAAEC,UAAU;EAAEC,6BAA6B;EAAEC,eAAe;EAAEC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAExH,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,IAAIiB,cAAc;EAClBA,cAAc,gBACZb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAQe,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAKX,kBAAkB,CAACD,IAAI,CAACa,EAAE,CAAE;MAAAH,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/FrB,OAAA;MAAKiB,EAAE,EAAC,kBAAkB;MAACD,OAAO,EAAEP,MAAO;MAAAK,QAAA,EAAEV,IAAI,CAACkB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9DrB,OAAA;MAAQe,SAAS,EAAC,aAAa;MAACC,OAAO,EAAEA,CAAA,KAAK;QAACJ,WAAW,CAAC,CAACD,QAAQ,CAAC;QAAEY,kBAAkB,CAAC,KAAK,CAAC;MAAA,CAAE;MAAAT,QAAA,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACvH,CACH;EAED,SAASG,WAAWA,CAACpB,IAAI,EAAG;IAC1BE,UAAU,CAACF,IAAI,CAAC;IAChBQ,WAAW,CAAC,CAACD,QAAQ,CAAC;EAExB;EAEA,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAIe,SAAS,EAAC,MAAM;MAAAD,QAAA,GAIjBH,QAAQ,gBAAGX,OAAA,CAACH,eAAe;QAAC4B,OAAO,EAAErB,IAAK;QAACsB,UAAU,EAAEF;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAIR,cAAc,EACxFL,eAAe,gBAAGR,OAAA,CAACF,iBAAiB;QAAC6B,KAAK,EAAEvB;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,GAAG,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGzD;EAAC,gBAEL,CAAC;AAEP;AAACX,EAAA,CAhCQP,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AAkC1B,eAAe,SAAS0B,cAAcA,CAAC;EAACC,WAAW;EAAEzB,kBAAkB;EAAEC;AAAU,CAAC,EAAC;EAAAyB,GAAA;EACnF,MAAM,CAACvB,eAAe,EAAEe,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAE7D,SAASa,MAAMA,CAACD,eAAe,EAAC;IAC9Be,kBAAkB,CAAC,CAACf,eAAe,CAAC;EAEtC;EAEE,MAAMwB,aAAa,GAAGF,WAAW,CAACG,GAAG,CAAC7B,IAAI,IAAI;IAAE,oBAAQJ,OAAA,CAACG,iBAAiB;MAACC,IAAI,EAAEA,IAAK;MAACI,eAAe,EAAEA,eAAgB;MAACC,MAAM,EAAEA,MAAO;MAACJ,kBAAkB,EAAEA,kBAAmB;MAACC,UAAU,EAAEA;IAAW,GAAMF,IAAI,CAACa,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,CAAE,CAAC;EAC7N,oBACIrB,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,EAAKkB;IAAa;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAIV;;AAEF;AAAAU,GAAA,CAlBwBF,cAAc;AAAAK,GAAA,GAAdL,cAAc;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}