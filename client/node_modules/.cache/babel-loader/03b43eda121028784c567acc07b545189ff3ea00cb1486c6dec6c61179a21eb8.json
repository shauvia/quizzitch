{"ast":null,"code":"var _jsxFileName = \"/home/shauvia/quizzitch/client/src/App.js\",\n  _s = $RefreshSig$();\n// import QuizSetup from './QuizSetupPage.js';\nimport './App.css';\nimport { useState } from 'react';\nimport CreateQuiz from './QuizSetupPage.js';\nimport DisplayQuizzes from './MyQuizzes.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NavBar({\n  onClickedHome,\n  onClickedMyQuizzes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: onClickedHome,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: onClickedMyQuizzes,\n        children: \"My Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = NavBar;\nfunction Header({\n  goBackToHomePage,\n  goToMyQuizzes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quizzitch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onClickedHome: goBackToHomePage,\n      onClickedMyQuizzes: goToMyQuizzes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Header;\nfunction Button({\n  btnName,\n  btnId,\n  onClickedButton\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClickedButton,\n    id: btnId,\n    children: btnName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Button;\nfunction SearchBar({\n  searchBarId\n}) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    id: searchBarId,\n    type: \"text\",\n    placeholder: \"Search...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_c4 = SearchBar;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA9 shauvia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n// function QuizSetupPage({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\n//   return ( \n//     <QuizSetup onAddQuizTitle={onAddQuizTitle} onAddQuizQA={onAddQuizQA} questionList={questionList} quizTitle={quizTitle}/>\n//   )  \n\n// }\n_c5 = Footer;\nfunction HomePage({\n  onCreateNewQuiz\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClickedButton: onCreateNewQuiz,\n      btnId: \"btnCreateNewQuiz\",\n      btnName: \"Create New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      btnId: \"btnRecentQuizes\",\n      btnName: \"Recent Quizes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchBarId: \"SearchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c6 = HomePage;\nfunction App() {\n  _s();\n  // <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false);}} />\n  //     { contentToDisplay === \"homepage\" ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false);}}/> : null }\n  //     { contentToDisplay === \"newQuiz\" ? <QuizSetupPage /> : null}\n\n  const [uploadNewQuiz, setUploadNewQuiz] = useState(false);\n  const [uploadHomePage, setUploadHomePage] = useState(true);\n  const [displayMyQuizzes, setdisplayMyQuizzes] = useState(false);\n  const [nextId, setNextId] = useState(0);\n  const [keyId, setKeyId] = useState(0);\n  const [quizzes, setQuizzes] = useState([]);\n\n  // function handleAddQuizTitle(quizTitle) {\n  //   const newQuiz = {...quiz};\n  //   // console.log('skopiowany Quiz and title', newQuiz)\n  //   newQuiz.title = quizTitle;\n  //   // console.log(\"newQuiztitle\", newQuiz.title);\n  //   setQuiz(newQuiz);\n  // }\n  // function handleAddQuizQA({quizQuestion, quizAnswer}){\n  //   const newQuiz = {...quiz};\n  //   console.log('skopiowany Quiz and question', newQuiz)\n  //   newQuiz.qa = [...quiz.qa];\n  //   console.log(\"newQuiz.qa po skopiowaniu\")\n  //   newQuiz.qa.push(\n  //     {question: quizQuestion,\n  //     answer : quizAnswer,\n  //     id: nextId}\n  //   )\n  //   setNextId(nextId + 1);\n  //   console.log(\"newQuiz and question\", newQuiz);\n  //   setQuiz(newQuiz);\n\n  // }\n\n  // async function removeTask(url, users, tasksApi, taskNum, token){\n  //   console.log(\"removeTask: url, tasks, taskId\",url+users+tasksApi+taskNum);\n  //   let response = await fetch(url+users+tasksApi+'/'+taskNum, { \n  //     method: 'DELETE', \n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     const err = new Error('fetch failed, removeTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText); \n  //     throw err;\n  //   }\n  // }\n\n  // async function addTask(url, users, tasksApi, uInput, token){\n  //   console.log(\"addTask\", users, uInput, token)\n  //   // console.log(\"app.js,addTask URL: \", url+postTask,)\n  //   let response = await fetch(url+users+tasksApi, { \n  //     method: 'POST' , \n  //     body: JSON.stringify(uInput),\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, addTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() oddżejsonowuje\n  //   console.log(\"addTaskContent\", content)\n  //   return content;\n  // }\n\n  // async function getTasks(url, users, tasksApi, token){\n  //   console.log('getTasks', users, token, tasksApi);\n  //   let response = await fetch(url+users+tasksApi, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.json();\n  //   console.log(\"getTaskContent\", content)\n  //   return content;\n  // }\n\n  function handleOnDeleteQuiz(quizId) {\n    const newQuizzes = [...quizzes];\n    let newerQuizzes = [];\n    for (let quiz of newQuizzes) {\n      if (quizId !== quiz.id) {\n        newerQuizzes.push(quiz);\n      }\n    }\n    // console.log(\"newQuiz\", newQuiz)\n    setQuizzes(newerQuizzes);\n  }\n  const quizzesApi = \"/addQuiz\";\n  let urll = \"http://localhost:3001/ruskisaper\";\n  let url = \"http://localhost:3001\";\n  async function addQuizServer(url, quizApi, uInput) {\n    console.log(\"addQuizServer\", url, uInput);\n    // console.log(\"app.js,addTask URL: \", url+postTask,)\n    let response = await fetch(url + quizApi, {\n      method: 'POST',\n      body: JSON.stringify(uInput),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      let err = new Error('fetch failed,addQuizServer, response.status: ' + response.status, ' response.statusText: ' + response.statusText);\n      throw err;\n    }\n    let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() oddżejsonowuje\n    console.log(\"addQuizServer\", content);\n    return content;\n  }\n  function handleAddQuiz(quiz) {\n    const newQuizzes = [...quizzes];\n    // console.log('skopiowany newQuizzes', newQuizzes)\n    quiz.id = nextId;\n    // console.log(\"id quizu\", quiz.id)\n    newQuizzes.push(quiz);\n    setNextId(nextId + 1);\n    // console.log('newQuizzes po dodaniu quizu', newQuizzes)\n    setQuizzes(newQuizzes);\n    setUploadHomePage(true);\n    setUploadNewQuiz(false);\n    addQuizServer(url, quizzesApi, newQuizzes);\n  }\n  function handleOnEditQuiz(editedQuiz) {\n    const newQuizzes = [...quizzes];\n    // let newerQuizzes =[];\n    console.log(\"newQuizzes\", editedQuiz);\n    for (let i = 0; i < newQuizzes.length; i++) {\n      if (newQuizzes[i].id === editedQuiz.id) {\n        newQuizzes[i] = editedQuiz;\n      }\n    }\n    setQuizzes(newQuizzes);\n\n    // for (let quiz of newQuizzes) {\n    //   console.log('quiz przed edycja', quiz);\n    //   if(editedQuiz.id === quiz.id) {\n    //     newerQuizzes.push(editedQuiz)\n    //     console.log('quiz po zedytowaniu', quiz );\n    //   }\n    //   newerQuizzes.push(quiz)\n    // }\n    // console.log('newQuizzes po edytowaniu quizu', newQuizzes)\n    // setQuizzes(newerQuizzes);\n\n    // sprawdzić, czy działa!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  }\n  let displayQuizzLis = /*#__PURE__*/_jsxDEV(DisplayQuizzes, {\n    quizzesList: quizzes,\n    handleOnDeleteQuiz: handleOnDeleteQuiz,\n    onEditQuiz: handleOnEditQuiz\n  }, keyId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 25\n  }, this);\n\n  // async function getTasks(url, users, tasksApi, token){\n  //   console.log('getTasks', users, token, tasksApi);\n  //   let response = await fetch(url+users+tasksApi, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.json();\n  //   console.log(\"getTaskContent\", content)\n  //   return content;\n  // }\n\n  async function getRuskiSaper(url) {\n    let response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      let err = new Error('fetch failed, getTasks, response.status: ' + response.status, ' response.statusText: ' + response.statusText);\n      throw err;\n    }\n    let content = await response.json();\n    console.log(\"getRuskiSaper\", content);\n    return content;\n  }\n  function kontaktujeSieZSerwerem() {\n    getRuskiSaper(urll);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      goBackToHomePage: () => {\n        setUploadHomePage(true);\n        setUploadNewQuiz(false);\n        setdisplayMyQuizzes(false);\n      },\n      goToMyQuizzes: () => {\n        setdisplayMyQuizzes(true);\n        setUploadHomePage(false);\n        setUploadNewQuiz(false);\n        setKeyId(keyId + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), uploadHomePage ? /*#__PURE__*/_jsxDEV(HomePage, {\n      onCreateNewQuiz: () => {\n        setUploadNewQuiz(true);\n        setUploadHomePage(false);\n        setdisplayMyQuizzes(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 26\n    }, this) : null, uploadNewQuiz ? /*#__PURE__*/_jsxDEV(CreateQuiz, {\n      onAddQuiz: handleAddQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 26\n    }, this) : null, displayMyQuizzes ? displayQuizzLis : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        kontaktujeSieZSerwerem();\n      },\n      children: \"Naci\\u015Bnij mnie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5tiBAVSQHRRpIeOHZslfHSDhX7A=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"SearchBar\");\n$RefreshReg$(_c5, \"Footer\");\n$RefreshReg$(_c6, \"HomePage\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["useState","CreateQuiz","DisplayQuizzes","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","onClickedHome","onClickedMyQuizzes","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header","goBackToHomePage","goToMyQuizzes","_c2","Button","btnName","btnId","onClickedButton","id","_c3","SearchBar","searchBarId","type","placeholder","_c4","Footer","_c5","HomePage","onCreateNewQuiz","_c6","App","_s","uploadNewQuiz","setUploadNewQuiz","uploadHomePage","setUploadHomePage","displayMyQuizzes","setdisplayMyQuizzes","nextId","setNextId","keyId","setKeyId","quizzes","setQuizzes","handleOnDeleteQuiz","quizId","newQuizzes","newerQuizzes","quiz","push","quizzesApi","urll","url","addQuizServer","quizApi","uInput","console","log","response","fetch","method","body","JSON","stringify","headers","ok","err","Error","status","statusText","content","text","handleAddQuiz","handleOnEditQuiz","editedQuiz","i","length","displayQuizzLis","quizzesList","onEditQuiz","getRuskiSaper","json","kontaktujeSieZSerwerem","onAddQuiz","_c7","$RefreshReg$"],"sources":["/home/shauvia/quizzitch/client/src/App.js"],"sourcesContent":["// import QuizSetup from './QuizSetupPage.js';\nimport './App.css';\nimport { useState } from 'react';\nimport CreateQuiz  from './QuizSetupPage.js';\nimport DisplayQuizzes from './MyQuizzes.js'\n\n\n\n\n\nfunction NavBar({onClickedHome,onClickedMyQuizzes}){\n  return (\n    <nav>\n      <ul className=\"menu\">\n        <li onClick={onClickedHome} >Home</li>\n        <li onClick={onClickedMyQuizzes}>My Quizzes</li>\n        <li>Settings</li>\n      </ul>\n    </nav>\n  )\n}\nfunction Header({goBackToHomePage, goToMyQuizzes}){\n  return (\n    <header>\n      <h1>Quizzitch</h1>\n      <NavBar onClickedHome={goBackToHomePage} onClickedMyQuizzes={goToMyQuizzes}/>\n    </header>\n  )\n}\n\nfunction Button({btnName, btnId, onClickedButton}){\n  return (\n    <button onClick={onClickedButton} id={btnId}>\n      {btnName}\n    </button>\n  )\n}\n\n\nfunction SearchBar ({searchBarId}){\n  return (\n      <input id={searchBarId} type=\"text\" placeholder=\"Search...\"/>\n  )\n}\n\nfunction Footer(){\n  return(\n    <footer>\n      <p>&copy; shauvia</p>\n    </footer>\n    \n  )\n}\n\n// function QuizSetupPage({onAddQuizTitle, onAddQuizQA, questionList, quizTitle}){\n//   return ( \n//     <QuizSetup onAddQuizTitle={onAddQuizTitle} onAddQuizQA={onAddQuizQA} questionList={questionList} quizTitle={quizTitle}/>\n//   )  \n \n// }\n\n\nfunction HomePage({onCreateNewQuiz}){\n  return (\n    <div className='homePage'>\n        <Button onClickedButton={onCreateNewQuiz} btnId='btnCreateNewQuiz' btnName={\"Create New Quiz\"}></Button>\n        <Button btnId=\"btnRecentQuizes\" btnName={\"Recent Quizes\"}></Button>\n        <SearchBar searchBarId='SearchBar'/>\n      </div>\n  )\n}\n\n\n\n\n\n\n\n\nfunction App() {\n\n\n  // <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false);}} />\n  //     { contentToDisplay === \"homepage\" ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false);}}/> : null }\n  //     { contentToDisplay === \"newQuiz\" ? <QuizSetupPage /> : null}\n\n  const [uploadNewQuiz, setUploadNewQuiz] = useState(false);\n  const [uploadHomePage, setUploadHomePage] = useState(true);\n  const [displayMyQuizzes, setdisplayMyQuizzes] = useState(false);\n  const [nextId, setNextId] = useState(0);\n  const [keyId, setKeyId] = useState(0);\n  const [quizzes, setQuizzes] = useState([])\n\n  // function handleAddQuizTitle(quizTitle) {\n  //   const newQuiz = {...quiz};\n  //   // console.log('skopiowany Quiz and title', newQuiz)\n  //   newQuiz.title = quizTitle;\n  //   // console.log(\"newQuiztitle\", newQuiz.title);\n  //   setQuiz(newQuiz);\n  // }\n  // function handleAddQuizQA({quizQuestion, quizAnswer}){\n  //   const newQuiz = {...quiz};\n  //   console.log('skopiowany Quiz and question', newQuiz)\n  //   newQuiz.qa = [...quiz.qa];\n  //   console.log(\"newQuiz.qa po skopiowaniu\")\n  //   newQuiz.qa.push(\n  //     {question: quizQuestion,\n  //     answer : quizAnswer,\n  //     id: nextId}\n  //   )\n  //   setNextId(nextId + 1);\n  //   console.log(\"newQuiz and question\", newQuiz);\n  //   setQuiz(newQuiz);\n\n  // }\n\n  // async function removeTask(url, users, tasksApi, taskNum, token){\n  //   console.log(\"removeTask: url, tasks, taskId\",url+users+tasksApi+taskNum);\n  //   let response = await fetch(url+users+tasksApi+'/'+taskNum, { \n  //     method: 'DELETE', \n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     const err = new Error('fetch failed, removeTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText); \n  //     throw err;\n  //   }\n  // }\n\n  // async function addTask(url, users, tasksApi, uInput, token){\n  //   console.log(\"addTask\", users, uInput, token)\n  //   // console.log(\"app.js,addTask URL: \", url+postTask,)\n  //   let response = await fetch(url+users+tasksApi, { \n  //     method: 'POST' , \n  //     body: JSON.stringify(uInput),\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, addTask, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() oddżejsonowuje\n  //   console.log(\"addTaskContent\", content)\n  //   return content;\n  // }\n  \n  // async function getTasks(url, users, tasksApi, token){\n  //   console.log('getTasks', users, token, tasksApi);\n  //   let response = await fetch(url+users+tasksApi, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.json();\n  //   console.log(\"getTaskContent\", content)\n  //   return content;\n  // }\n\n  function handleOnDeleteQuiz(quizId){\n    const newQuizzes = [...quizzes];\n    let newerQuizzes =[];\n    for (let quiz of newQuizzes) {\n      if(quizId !== quiz.id) {\n        newerQuizzes.push(quiz);\n      }\n    }\n    // console.log(\"newQuiz\", newQuiz)\n    setQuizzes(newerQuizzes);\n  }\n\n  const quizzesApi = \"/addQuiz\"\n  let urll = \"http://localhost:3001/ruskisaper\";\n  let url = \"http://localhost:3001\";\n\n  async function addQuizServer(url, quizApi, uInput){\n    console.log(\"addQuizServer\", url,  uInput)\n    // console.log(\"app.js,addTask URL: \", url+postTask,)\n    let response = await fetch(url+quizApi, { \n      method: 'POST' , \n      body: JSON.stringify(uInput),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    });\n    if (!response.ok) {\n      let err = new Error('fetch failed,addQuizServer, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n      throw err;\n    }\n    let content = await response.text(); // dobranie sie do tresci jest asynchroniczne, trzeba czekac; .json() oddżejsonowuje\n    console.log(\"addQuizServer\", content)\n    return content;\n  }\n    \n  \n  function handleAddQuiz(quiz) {\n    const newQuizzes = [...quizzes];\n    // console.log('skopiowany newQuizzes', newQuizzes)\n    quiz.id = nextId;\n    // console.log(\"id quizu\", quiz.id)\n    newQuizzes.push(quiz);\n    setNextId(nextId + 1);\n    // console.log('newQuizzes po dodaniu quizu', newQuizzes)\n    setQuizzes(newQuizzes);\n    setUploadHomePage(true); \n    setUploadNewQuiz(false);\n    addQuizServer(url, quizzesApi, newQuizzes);\n\n\n  }\n\n  function handleOnEditQuiz(editedQuiz) {\n    const newQuizzes = [...quizzes];\n    // let newerQuizzes =[];\n    console.log(\"newQuizzes\", editedQuiz)\n    for (let i = 0; i < newQuizzes.length; i++){\n      if(newQuizzes[i].id === editedQuiz.id){\n        newQuizzes[i] = editedQuiz;\n      }\n    }\n    setQuizzes(newQuizzes);\n\n    // for (let quiz of newQuizzes) {\n    //   console.log('quiz przed edycja', quiz);\n    //   if(editedQuiz.id === quiz.id) {\n    //     newerQuizzes.push(editedQuiz)\n    //     console.log('quiz po zedytowaniu', quiz );\n    //   }\n    //   newerQuizzes.push(quiz)\n    // }\n    // console.log('newQuizzes po edytowaniu quizu', newQuizzes)\n    // setQuizzes(newerQuizzes);\n\n    // sprawdzić, czy działa!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  }\n\n  let displayQuizzLis = <DisplayQuizzes quizzesList={quizzes} handleOnDeleteQuiz={handleOnDeleteQuiz} onEditQuiz={handleOnEditQuiz} key={keyId}/>;\n  \n  // async function getTasks(url, users, tasksApi, token){\n  //   console.log('getTasks', users, token, tasksApi);\n  //   let response = await fetch(url+users+tasksApi, {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\": JSON.stringify(token)\n  //     }\n  //   });\n  //   if (!response.ok) {\n  //     let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n  //     throw err;\n  //   }\n  //   let content = await response.json();\n  //   console.log(\"getTaskContent\", content)\n  //   return content;\n  // }\n\n  \n\n  async function getRuskiSaper(url) {\n    let response = await fetch(url,{\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n\n  if (!response.ok) {\n        let err = new Error('fetch failed, getTasks, response.status: ' +  response.status, ' response.statusText: ' +  response.statusText);\n        throw err;\n      }\n      let content = await response.json();\n      console.log(\"getRuskiSaper\", content)\n      return content;\n  }\n  \n  \n  function kontaktujeSieZSerwerem(){\n    getRuskiSaper(urll);\n  }\n\n  return (\n    <>\n      <Header goBackToHomePage={()=>{setUploadHomePage(true); setUploadNewQuiz(false); setdisplayMyQuizzes(false)}} goToMyQuizzes={()=>{setdisplayMyQuizzes(true); setUploadHomePage(false); setUploadNewQuiz(false); setKeyId(keyId + 1)}} />\n      { uploadHomePage ? <HomePage onCreateNewQuiz={()=>{setUploadNewQuiz(true); setUploadHomePage(false); setdisplayMyQuizzes(false)}}/> : null }\n        {uploadNewQuiz ? < CreateQuiz onAddQuiz={handleAddQuiz}/> : null}\n        {displayMyQuizzes ? displayQuizzLis : null}\n        <button onClick={()=> {kontaktujeSieZSerwerem()}}>Naciśnij mnie</button>\n      {/* { uploadNewQuiz ? <QuizSetupPage onAddQuizTitle={handleAddQuizTitle} onAddQuizQA={handleAddQuizQA} questionList={quiz.qa} quizTitle={quiz.title}/> : null} */}\n      \n      <Footer/>\n  </>\n  )\n}\n\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}